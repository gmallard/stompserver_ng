#!/usr/bin/env ruby
require 'rubygems'
require 'etc'
require 'yaml'
require 'daemons/daemonize'
require 'stomp_server_ng'
require 'optparse'
require 'logger'

$STOMP_SERVER = true # See the queue manager, required for monitor start

#
# Use epoll if available.
#
EventMachine::epoll
#
# Run.
#
EventMachine::run do

  ## Get the configuration and initialize the stomp engine
  config = StompServer::Configurator.new
  stomp = StompServer::Run.new(config.opts)
  stomp.start

  log = Logger.new(STDOUT)
  log.level = Logger::DEBUG

  # Might want to uncomment this if you are sending large files
  #EventMachine::add_periodic_timer 10, proc {GC.start}
  
  log.debug "Client authorization enabled" if config.opts[:auth]

  ## Start protocol handlers

  log.debug "Stomp protocol handler starting on #{config.opts[:host]} port #{config.opts[:port]}"
  EventMachine.start_server(config.opts[:host], 
      config.opts[:port], 
      StompServer::Protocols::Stomp, 
        stomp.auth_required,    # *args: arg[0] 
        stomp.queue_manager,    # *args: arg[1] 
        stomp.topic_manager,    # *args: arg[2] 
        stomp.stompauth,        # *args: arg[3] 
        config.opts             # Options hash
      )

end
